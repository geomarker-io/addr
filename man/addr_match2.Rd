% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addr_match2.R
\name{addr_match2}
\alias{addr_match2}
\alias{addr_match_line_one}
\title{matching addr vectors}
\usage{
addr_match2(
  x,
  ref_addr,
  max_dist_street_number = 0,
  max_dist_street_name = 1,
  max_dist_street_type = 0,
  simplify = FALSE
)

addr_match_line_one(
  x,
  ref_addr,
  max_dist_street_number = 0,
  max_dist_street_name = 1,
  max_dist_street_type = 0,
  simplify = FALSE
)
}
\arguments{
\item{x}{an addr vector to match}

\item{ref_addr}{an addr vector to search for matches in}

\item{max_dist_street_number}{maximum OSA distance to consider a match for the addr street_number}

\item{max_dist_street_name}{maximum OSA distance to consider a match for the addr street_name}

\item{max_dist_street_type}{maximum OSA distance to consider a match for the addr street_type}

\item{simplify}{logical; randomly select one addr from multi-matches and return an
addr() vector instead of a list? (empty addr vectors and NULL values are converted
to NA)}
}
\value{
a named list of possible addr matches for each addr in \code{x};
a list value of NULL means the zip code was not matched and
a list value of a zero-length addr vector means the zip code was matched,
but the street number, name, and type were not matched
}
\description{
Optimized String Alignment (OSA) distances are used to
choose a set of matching reference addr with flexible, field-specific thresholds.
See \code{fuzzy_match()}/\code{fuzzy_match_addr_field()} for more details.
}
\examples{
addr(c("3333 Burnet Ave Cincinnati OH 45229", "5130 RAPID RUN RD CINCINNATI OHIO 45238")) |>
  addr_match2(cagis_addr()$cagis_addr)

addr(c("3333 Burnet Ave Cincinnati OH 45229", "5130 RAPID RUN RD CINCINNATI OHIO 45238")) |>
  addr_match2(cagis_addr()$cagis_addr, simplify = FALSE) |>
  tibble::enframe(name = "input_addr", value = "ca") |>
  dplyr::mutate(ca = purrr::list_c(ca)) |>
  dplyr::left_join(cagis_addr(), by = c("ca" = "cagis_addr")) |>
  tidyr::unnest(cols = c(cagis_addr_data)) |>
  dplyr::select(-ca, -cagis_address)
}
